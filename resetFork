#!/bin/sh -x

#reset your fork branch to the upstream versions
#defaults to just master, but can include other branches

branches="$1"
if [ "$branches" == "" ]; then
  branches=""
else
  branches="$1"
fi

#master#{{{

#echo "-------------------------------------"
#echo "reset Remote + Remote Tracking Branches: master"
#echo "-------------------------------------"
#echo ""

git checkout master
git fetch origin master
git reset --hard upstream/master
git clean -fxd
git push origin master
git merge upstream/master

#master}}}
#branches#{{{

if [ "$branches" != "" ];then

for branch in `echo $branches|sed -e 's/,/ /g'`; do

#echo "-------------------------------------"
#echo "reset Remote + Remote Tracking Branches: $branch"
#echo "-------------------------------------"
#echo ""

git checkout master
#delete remote branch
git push origin :env/$branch
#recreate local branch
git branch -D env/$branch
#config
git branch --set-upstream env/$branch upstream/env/$branch
#git checkout -b env/$branch upstream/env/$branch
git branch --track env/$branch upstream/env/$branch
#checkout branch
git checkout env/$branch
#clean orphans
git clean -fxd
#commit
git commit -a
#recreate,sync the remote branch
git push origin env/$branch
#reset the tracking branch to origin (if upstream)
git branch --set-upstream env/$branch origin/env/$branch
#sync the remote branch (again)
#this is the missing bit
git merge upstream/env/$branch
git push --force origin env/$branch

#git checkout env/$branch
##fetch, not pull - in case there are conflicts
#git fetch origin env/$branch
##reset the what the upstream remote says
#git reset --hard upstream/env/$branch
##clean orphans
#git clean -fxd
##sync the remote branch
#git push --force origin env/$branch

done

fi

#branches#}}}

